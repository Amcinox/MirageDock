name: Build and Release

on:
    push:
        branches: [main]
    workflow_dispatch:

permissions:
    contents: write
    packages: write

jobs:
    build:
        runs-on: macos-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch all history for proper versioning

            - name: Setup Swift
              uses: swift-actions/setup-swift@v2
              with:
                  swift-version: "5.9"

            - name: Build Release
              run: |
                  swift build --configuration release

            - name: Create App Bundle
              run: |
                  chmod +x create_app.sh
                  ./create_app.sh

            - name: Code Sign App
              run: |
                  # Code sign the app to prevent "damaged" warnings
                  codesign --force --deep --sign - MirageDock.app

            - name: Create DMG
              run: |
                  # Create a DMG for easier distribution
                  hdiutil create -volname "MirageDock" -srcfolder MirageDock.app -ov -format UDZO MirageDock.dmg

            - name: Create App Bundle Zip
              run: |
                  # Create a zip file of the app bundle for direct download
                  ditto -c -k --sequesterRsrc --keepParent MirageDock.app MirageDock.app.zip

            - name: Get Version
              id: version
              run: |
                  # Get version from git tag or use default
                  if git describe --tags --abbrev=0 2>/dev/null; then
                      VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
                  else
                      VERSION="1.0.0"
                  fi
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "tag=v$VERSION" >> $GITHUB_OUTPUT

            - name: Create Release
              id: create_release
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  # Create release using GitHub CLI
                  gh release create ${{ steps.version.outputs.tag }} \
                      --title "MirageDock ${{ steps.version.outputs.version }}" \
                      --notes "## üöÄ MirageDock ${{ steps.version.outputs.version }}

                      ### ‚ú® What's New
                      - Enhanced Settings UI with categorized editor selection
                      - Fixed Cursor editor detection
                      - Improved card interaction with full-area clickability
                      - Custom app icon support
                      - Sandbox-compatible editor integration

                      ### üéØ Features
                      - **Multi-Editor Support**: VS Code, Cursor, Sublime Text, Atom, Vim, JetBrains IDEs, Xcode, and custom editors
                      - **Smart Detection**: Automatically detects installed editors
                      - **Menu Bar Integration**: Always accessible from menu bar
                      - **Project Management**: Organize repositories by projects
                      - **Modern UI**: Beautiful, responsive interface

                      ### üì¶ Installation
                      1. Download \`MirageDock.dmg\`
                      2. Drag MirageDock to Applications
                      3. Launch and configure your preferred editor

                      ### üîß Requirements
                      - macOS 13.0 or later
                      - Your preferred code editor (optional)

                      ### üìù Changelog
                      - Fixed Cursor editor bundle identifier
                      - Enhanced Settings UI with better visual hierarchy
                      - Improved editor card interaction
                      - Added custom icon support
                      - Fixed sandbox compatibility issues

                      ### üèóÔ∏è Build Info
                      - Built with Swift 5.9
                      - macOS 13.0+ compatible
                      - Sandboxed for security

                      ---

                      **Built automatically on ${{ github.event.head_commit.timestamp }}**" \
                      --draft=false \
                      --prerelease=false

            - name: Upload App Bundle
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  gh release upload ${{ steps.version.outputs.tag }} MirageDock.app.zip

            - name: Upload DMG
              env:
                  GH_TOKEN: ${{ github.token }}
              run: |
                  gh release upload ${{ steps.version.outputs.tag }} MirageDock.dmg
